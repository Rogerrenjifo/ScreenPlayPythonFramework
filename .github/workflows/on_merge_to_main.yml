name: Analize code, security and build an image

on: 
  push:
    branches: ["main"]

env:
  USERNAME: ${{secrets.TRELLO_USER }}
  PASSWORD: ${{secrets.TRELLO_PASSWORD }}

# set permissions
permissions:
  contents: read

jobs:
  code_analysis:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Clone the repository and set the branch
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v3
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Analysing the code with pylint
        run: |
          mkdir -p reports/pylint_report
          pylint src/ | pylint-json2html -f jsonextended -o reports/pylint_report/pylint.html

      - name: execute the test case and code coverage
        run: |
          pytest --cov=src/test/unittests --cov-report term-missing --cov-fail-under=${{vars.MINIMUN_COVERAGE}}
          pytest --html=reports/pytest_report/report.html
          coverage html -d reports/coverage_report

      - name: Generate artifacts
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: reports
          path: reports

  build:
    needs: code_analysis
    runs-on: ubuntu-latest
    steps:
      - run: echo build and image of the tests
    
  execute_test_cases_in_Edge:
    environment: dev
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v3
      - uses: isbang/compose-action@v1.5.1
        with:
          compose-file: "./docker-compose.yaml"
      - name: commands
        run: |
          export PYTHONPATH=$PWD
          pip install -r requirements.txt
          docker container ls
          python src/test/gui_tests/create_board.py
      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: report.html

  execute_test_cases_in_Chrome:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - run: echo dtest cases executed
  
  build_reports:
    needs: [execute_test_cases_in_Edge, execute_test_cases_in_Chrome]
    runs-on: ubuntu-latest
    steps:
      - name: Step 1
        run: echo "build reports, from differents jobs "
